<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- Data Source Config -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/yf-oa?characterEncoding=UTF-8" />
		<property name="username" value="dbadmin" />
		<property name="password" value="741235896" />
		<!-- 
		<property name="url"
			value="jdbc:mysql://localhost:3306/yf_platform_db?characterEncoding=UTF-8" />
		<property name="username" value="yfuser" />
		<property name="password" value="87252798" />
		 -->
		<!-- 配置初始化大小、最小、最大 -->   
	    <property name="minIdle" value="1" />  
	    <property name="maxActive" value="20" />  
	
	    <!-- 配置获取连接等待超时的时间 -->  
	    <property name="maxWait" value="60000" />  
	
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	    <property name="timeBetweenEvictionRunsMillis" value="600000" />  
	
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	    <property name="minEvictableIdleTimeMillis" value="300000" />  
	
	    <property name="validationQuery" value="SELECT 'x'" />  
	    <property name="testWhileIdle" value="true" />  
	    <property name="testOnBorrow" value="false" />  
	    <property name="testOnReturn" value="false" />  
	</bean>
	
	<!-- MyBatis3的配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionFactory">
	    	<bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
	    </property>
		<property name="configLocation" value="classpath:configuration.xml" />
		<property name="mapperLocations" value="classpath*:mapper/*.xml" />
	</bean>
	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="commonDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="biz.yf.oa.dao.CommonMapper"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
    <bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="biz.yf.oa.dao.UserMapper"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
    <bean id="settingDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="biz.yf.oa.dao.SettingMapper"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
    
	<!-- All Service Config -->
	<bean id="loginService" class="biz.yf.oa.service.LoginService">
	    <property name="userMapper" ref="userDao"></property>
	</bean>
	
	
	<bean id="userService" class="biz.yf.oa.service.UserService">
	    <property name="userMapper" ref="userDao"></property>
	</bean>
	
	<bean id="settingService" class="biz.yf.oa.service.SettingService">
	    <property name="settingMapper" ref="settingDao"></property>
	</bean>
	
	
	
</beans>